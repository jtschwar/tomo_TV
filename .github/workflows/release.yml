name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: python
          
      # Debug outputs
      - name: Debug outputs
        run: |
          echo "release_created: ${{ steps.release.outputs.release_created }}"
          echo "tag_name: ${{ steps.release.outputs.tag_name }}"

  build_wheels:
    name: Build wheels with CUDA support
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build manylinux wheels with CUDA 11
      run: |
        docker build -f docker/Dockerfile.manylinux -t tomo-tv-builder .
        mkdir -p wheelhouse
        docker run --rm -v $PWD/wheelhouse:/output tomo-tv-builder

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-cuda
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build sdist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: read
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: List artifacts
      run: ls -la dist/

    - uses: pypa/gh-action-pypi-publish@release/v1