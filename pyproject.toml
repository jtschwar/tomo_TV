[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "numpy",
    "cython",
    "pybind11",
]
build-backend = "setuptools.build_meta"

[project]
name = "tomofusion"
version = "0.1.0"
description = "Python and C++ toolbox for tomographic data processing and iterative reconstruction algorithms"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Jonathan Schwartz", email = "jtschw@umich.edu"},
]
keywords = ["tomography", "reconstruction", "cuda", "3d", "imaging", "electron-microscopy"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy",
    "scipy",
    "matplotlib",
    "scikit-image",
    "h5py",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black",
    "flake8",
    "jupyter",
    "build",
    "twine",
]

[project.urls]
Homepage = "https://github.com/jtschwar/tomo_TV"
"Bug Reports" = "https://github.com/jtschwar/tomo_TV/issues"
"Source" = "https://github.com/jtschwar/tomo_TV"

[tool.setuptools.packages.find]
where = ["."]
include = ["tomofusion*"]

[tool.setuptools.package-data]
"tomofusion" = ["*.so", "*.dll", "*.dylib"]

# Configuration for cibuildwheel (if you choose to use it later)
[tool.cibuildwheel]
build = "cp38-* cp39-* cp310-* cp311-*"
skip = "*-win32 *-manylinux_i686"

[tool.cibuildwheel.linux]
# This would be used if you switch to cibuildwheel instead of custom Docker
before-all = [
    "yum install -y wget autotools-dev automake libtool boost-devel",
    # CUDA installation commands would go here
]

environment = {
    CUDA_HOME = "/usr/local/cuda",
    ASTRA_HOME = "/usr/local/astra"
}

[tool.cibuildwheel.linux.environment]
CUDA_HOME = "/usr/local/cuda"
ASTRA_HOME = "/usr/local/astra"
PATH = "/usr/local/cuda/bin:$PATH"
LD_LIBRARY_PATH = "/usr/local/cuda/lib64:/usr/local/astra/lib:$LD_LIBRARY_PATH"

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git          
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | thirdparty
)/
'''